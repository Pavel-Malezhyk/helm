---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-master
  labels:
    environment: {{ .Values.global.environment }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
    role: master
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: {{ .Values.global.product }}
    role: master
    tier: {{ .Values.appName }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-master
  labels:
    environment: {{ .Values.global.environment }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName}}
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.product }}
      role: master
      tier: {{ .Values.appName }}
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis-configmap.yaml") . | sha256sum }}
      labels:
        environment: {{ .Values.global.environment }}
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
        role: master
    spec:
      containers:
      - name: master
        image: {{ .Values.image.registry }}/{{ .Values.global.repotype }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 100Mi
        ports:
        - containerPort: 6379
        volumeMounts:
          - name: redisconfig
            mountPath: /usr/local/etc/redis
#            subPath: redis.conf
            {{- if not  (eq .Values.global.repotype "public") }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets.name }}
            {{- end }}
      volumes:
        - name: redisconfig
          configMap:
            name: {{ .Values.appName }}-config
