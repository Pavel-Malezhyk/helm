---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}
  labels:
    environment: {{ .Values.global.environment }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName}}
spec:
  ports:
    - port: 5432
  selector:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresqldata-{{ .Release.Name }}
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
    volume_type: postgresqldata-{{ .Release.Name }}
spec:
  storageClassName: manual
  capacity:
    storage: 1Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /ebsmnt/postgres/{{ .Release.Name }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.appName }}-claim
  labels:
    app: {{ .Values.global.product }}
spec:
  storageClassName: manual
  selector:
    matchLabels:
      app: {{ .Values.global.product }}
      tier: {{ .Values.appName }}
      volume_type: postgresqldata-{{ .Release.Name }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    environment: {{ .Values.global.environment }}
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        environment: {{ .Values.global.environment }}
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
    spec:
      containers:
        - image: postgres:9.6.2-alpine
          imagePullPolicy: IfNotPresent
          name: {{ .Values.appName }}
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.global.db.dbhost }}
            - name: POSTGRES_USER
              value: {{ .Values.global.db.dbsuperuser }}
            - name: POSTGRES_PASSWORD
              value: '{{ .Values.global.db.dbsuperuserpwd }}'
            - name: PGLOCAL_USER
              value: {{ .Values.global.db.dbuser }}
            - name: PGLOCAL_USER_PWD
              value: '{{ .Values.global.db.dbpwd }}'
            - name: DB_FLAG
              value: '{{ .Values.global.db.internal }}'
            - name: PGDATA
              value: /var/lib/pgsql/data/
            - name: CORE_LOGIN
              value: {{ .Values.global.superuser_login | default "admin@corezoid.loc" }}
            - name: CORE_AUTH_HASH
              value: {{ .Values.global.capi.capi_auth_hash | default "YNGUqzY0PqNKlo0QH30dcj2QnQuSDGsd" }}
            - name: CORE_PASSWD
              value: {{ .Values.global.superuser_passwd }}
            - name: SHARD_COUNT
              value: '{{ .Values.global.db.shards_count }}'
          ports:
            - containerPort: 5432
              name: {{ .Values.appName }}
          volumeMounts:
            - name: postgresqldata-{{ .Release.Name }}
              mountPath: /var/lib/postgresql/data
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: custom-db-scripts
              mountPath: /tmp/sql
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: postgresqldata-{{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-claim
        - name: custom-init-scripts
          configMap:
            name: {{ .Values.appName }}-init-scripts
        - name: custom-db-scripts
          configMap:
            name: {{ .Values.appName }}-db-scripts
