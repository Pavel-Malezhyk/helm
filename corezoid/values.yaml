# Global values for subcharts | production
global:
  #if secretalreadyexist true - all sensitive data will be taken from secrets and skipping from values
  #if secretalreadyexist false - all sensitive data will be taken from  values below
  secretalreadyexist: false
  #repotype, posible values - corezoid / public
  repotype: public
  # second level domain only! / core domain (example: corezoid.com)
  domain: "paasdevops.com"
  # subdomain / sitename - dev.mpo.corezoid.com (example: dev.mpo)
  subdomain: "corezoid"

  # product name
  product: corezoid

  # Ingress annotations
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt
#      alb.ingress.kubernetes.io/scheme: internet-facing
#      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:305168114386:certificate/5fad3576-220b-4c69-ac85-e56b3fe684bd
#      alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
#      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#      # access restriction
#      alb.ingress.kubernetes.io/inbound-cidrs: 8.8.8.8/32, 1.1.1.1/32, 0.0.0.0/0
      # for creating route53 record-set
      #external-dns.alpha.kubernetes.io/hostname: {{ .Values.global.subdomain}}.{{ .Values.global.domain }}
  ingress_tls: true


  # Define global storage class: efs / ceph / nfs / manual  (see TASK.md, efs is preferred)
  storage: nfs

######## Settings AWS EFS filesystem   ########

  efs:
    awsRegion: "eu-west-1"
    efsFileSystemId: "fs-1388e9d9"

########  Settings for stateful services  ########

  #######  PostgreSQL  ########
  ## Supported version  from > 9.5 - 9.6.14R1 <
  ## for RDS minimum instance - db.t2.medium / master user set "postgres"
  db:
    #if internal true - create and use internal k8s postgres container
    #if internal false - enable external db, like aws rds
    internal: false
    ## if we have global secrets for PostgreSQl with credentials we should provide this secret name
    ## secretName: "pg-secret"
    secretName: "pg-postgresql"

    #dbhost/dbport/dbuser/dbpwd/dbsuperuser/dbsuperpwd deps from secretalreadyexist
    dbhost: ""

    ## dbsuperuser - for init db and roles
    ## dbuser - for work from Corezoid services
    ## dbsuperuser and dbuser cannot be changed (because used as plain text in sql)
    dbuser: "internal_user"
    ## password - for dbuser
    dbpwd: "g4BOBiM7PClavM07lbAkYpy"

    dbsuperuser: "postgres"
    ## password - for postgres
    dbsuperuserpwd: "p2vbYNMaXsxANWj8XEyVerf8"

    dbport: "5432"
    ###### ATENTION! shards_count and shards cant be changed after first init!!!! ####
    #be careful in defining this variable
    #count of shards created in psql, if unset, default - 10
    shards_count: 10
    #count of shards created in psql, if unset, default - 10 - in array format
    shards: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]

    # set false to disable if you don't want to use PGBouncer (default - true)
    bouncer: true
    #Config for pg_bouncer
    #Maximum number of client connections allowed.
    maxclientconn: 100000
    #How many server connections to allow per user/database pair. Can be overridden in the per-database configuration.
    default_pool_size: 1500
    # Server is released back to pool after transaction finishes. default: session, see man https://wiki.postgresql.org/wiki/PgBouncer
    # transaction | session
    default_pool_mode: transaction

    # Postgres corezoid schema version
    postgres_schema:
      version: "5.4.2"

    rotation:
      ## enabled: true or false
      enabled: true
      # tasks_archive table cleanup period in crontab format
      # minute hour day month dayofweek
      schedule: "0 0 1 * *"

  #######  Redis  ########
  ## Supported version  from > 3.2.4 - 3.2.12 <
  ## NO CLUSTER Mode!
  redis:
    #if internal true - create and use internal k8s redis container
    #if internal false - enable external redis, like aws elasticache (Engine Version Compatibility: 3.2.10)
    internal: false
    # host/port/password deps from secretalreadyexist
    ## if we have global secret with credentials we should provide this secret name
    ## secretName: "redis-secret"
    secretName: "redis"

    host: ""
    port: 6379
    password: ""


  #######  Elasticsearch  ########
  ## Supported version  from >= 6.7
  elasticsearch:
    tag: "6.7.1"
    #if internal true - create and use internal k8s elasticsearch container
    #if internal false - enable external elasticsearch, like aws elasticsearch service
    internal: true
    #host/port deps from secretalreadyexist
    ## if we have global secret with credentials we should provide this secret name
    ## secretName: "elasticsearch-secret"
    secretName: "elasticsearch-secret"

    host: ""
    ##be careful with port - in internal install used 9200, in aws uses 443
    port: "9200"

  #######  RabbitMQ  ########
  ## Supported version  3.8.5
  mq:
    #if internal true - create and use internal k8s rmq container
    #if internal false - enable external rmq (on aws ec2 instances as example)
    internal: false
    #host/port/vhost/username/password deps from secretalreadyexist
    ## if we have global secret with credentials we should provide this secret name
    ## secretName: "mq-secret"
    secretName: "mq-rabbitmq"

    host: "rabbit-service"
    port: "5672"
    vhost: "/conveyor"
    username: "app-user"
    password: "SL9SXNHjd@fInYkn1RFT6@zvCFPYEr@r"
    # vm_memory_high_watermark.relative
    memoryHighWatermark: 0.3

########  Settings for Corezoid services  ########
  ##Settings for API Corezoid
  capi:
    tag: "7.4.2.3"
    minReplicas: 1
    maxReplicas: 1
    # application resources limits and requests
    resources:
      limits:
        cpu: 1200m
        memory: 1500Mi
      requests:
        cpu: 600m
        memory: 500Mi
    # capi secret and auth_hash deps from secretalreadyexist
    ## secret for work with api-multipart ( it is a solt for sign user cookies )
    capi_api_secret: "g98g987f8f6d8yfjf8ttctc"
    ## Auth hash for cookie (it is solt for password when we use corezoid auth method(login+password))
    capi_auth_hash: "0PqNKlo0QH30dcYNGUqzYj2QnQuSDGsd"
    #Key for captcha when login in UI
    capi_front_captcha_key: ""
    #We can disable or enable  captcha
    capi_front_captcha_key_disabled: true
    capi_backend_captcha_key: ""
    capi_backend_captcha_key_disabled: true
    #max req/sec of create|modify|delete for conv|folder|dashboard in 1 sec
    max_reqs_limit: 300
    # merchant_api settings
    merchant_api:
      skip_otp: true
    # cookie expire time in sec (default 900)
    cookie_expr_time: 7200
    ## Setting for configure frontend
    front_setting:
      # documentation (navigate by clicking on DOCS link)
      doc_host: "doc.corezoid.com"
      doc_index: "/"
      ui:
        # enabled Market button
        market: false
        # button Create -> Bot platform
        bot_platform: false
        # billing button display
        billing: false
        # display of the git_call button
        git_call: false
        # set default company name
        default_company: "My Corezoid"
        # Tab name
        tab_name: "Corezoid"
        # disable or enable logo on main page
        disabled_auth_logo: false
        # colors
        color_main: "#0791e5"
        color_logo: "#0791e5"
        color_logo_hover: "#056cab"
    ldap_server: "ldap.middleware.loc"
    ldap_port: "389"
    ldap_base: "ou=people,o=middleware"
    ldap_filter: "uid"
    #then this param is true, bind_user_name, bind_user_pass should be filled. if it's false it is not necessary
    ldap_first_bind_user: true
    ldap_bind_user_name: "uid=ldap,ou=people,o=middleware"
    ldap_bind_user_pass: ""
    ldap_user_nick_entry: "cn"
    ldap_tls: false
    # api limit counters by user_id
    user_limits:
      #default limit interface requests, ban after for 1 min
      max_interface_rate: 300
      #default limit for task create/modify, other will get 429 error
      max_user_rate: 300
    logic_settings:
      #max allowed threads for api logic
      api_max_thread: 300
      sender_max_threads: 25
      timer_default: 5 # 30
    # enigma private_key_id
    enigma_pk_id: ""

########  Settings for services  ########

# http-worker
  http:
    tag: "3.4.0.2"
    minReplicas: 1
    maxReplicas: 1
    # application resources limits and requests
    resources:
      limits:
        cpu: 400m
        memory: 800Mi
      requests:
        cpu: 300m
        memory: 350Mi
    max_http_resp_size: "5242880"
    # enigma private_key_id
    enigma_pk_id: ""

# usercode
  usercode:
    tag: "7.2.0"
    minReplicas: 1
    maxReplicas: 1
    # application resources limits and requests
    resources:
      limits:
        cpu: 800m
        memory: 900Mi
      requests:
        cpu: 250m
        memory: 800Mi
    # enigma private_key_id
    enigma_pk_id: ""

# conveyor-worker
  worker:
    tag: "4.4.0.1"
    minReplicas: 1
    maxReplicas: 1
    # application resources limits and requests
    resources:
      limits:
        cpu: 1200m
        memory: 1500Mi
      requests:
        cpu: 1000m
        memory: 500Mi
    # enigma private_key_id
    enigma_pk_id: ""

# mult
  mult:
    tag: "2.4.0.1"
    minReplicas: 1
    maxReplicas: 1
    # application resources limits and requests
    resources:
      limits:
        cpu: 600m
        memory: 800Mi
      requests:
        cpu: 500m
        memory: 800Mi
    # enigma private_key_id
    enigma_pk_id: ""

# webadm
  webadm:
    tag: "5.4.2"
    minReplicas: 1
    limit_req: 70

# web-superadm
  web_superadm:
    tag: "1.3.1"
    subdomain: "superadm-k8s-public"
    minReplicas: 1

# syncapi
  syncapi:
    subdomain: "syncapi-k8s-public"
    tag: "2.0"
    minReplicas: 1
    maxReplicas: 1
    resources:
      limits:
        cpu: 400m
        memory: 400Mi
      requests:
        cpu: 400m
        memory: 250Mi

# merchant
  merchant:
    tag: "v0.0.27.2"
    #login/secret for corezoid-merchant comunications
    merchant_login: apiLogin1
    merchant_secret: I9EmB170XUbe
    # application resources limits and requests
    resources:
      limits:
        cpu: 500m
        memory: 800Mi
      requests:
        cpu: 100m
        memory: 500Mi

# enigma global settings
  enigma:
    enabled: false
    encryption: false
    key_manager:
      tag: "1.1.0"
      aws_kms_role: ""
      minReplicas: 1
      maxReplicas: 1
      # application resources limits and requests
      resources:
        limits:
          cpu: 1000m
          memory: 1300Mi
        requests:
          cpu: 350m
          memory: 500Mi

# single-account
  sa:
    enabled: false # under develop
  sa_web:
    subdomain: ""

# gitcall | worker and rabbit settings
  gitcall:
    enabled: false # under develop
    mq_vhost: "/gitcall"
    dunder_mq_vhost: "/dundergitcall"
    mq_username: "gitcall"
    mq_password: "QIsV6w4HaVwNkIvJvHvrS9i9JhNDEGzi"

# conf-agent-server
  conf_agent_server:
    tag: "1.3.1"
    minReplicas: 1
    maxReplicas: 1
    resources:
      limits:
        cpu: 1000m
        memory: 1300Mi
      requests:
        cpu: 350m
        memory: 500Mi

  limits:
    tag: "1.0.1"
    minReplicas: 1


# debug options
# allows write crushdumps to the stderr output for capturing by logging system
  debug: false

